/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computerstoreapplication;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Lenovo
 */
public class SellerFrame extends javax.swing.JFrame {

    private Connection connection;
    private TableRowSorter<TableModel> rowSorter;
    /**
     * Creates new form SellerFrame
     */
    public SellerFrame() {
        initComponents();
        BorderLayout layout = new BorderLayout();
        layout.preferredLayoutSize(diagramPanel);
        diagramPanel.setLayout(layout);
        
        try {
            connection = DBConnection.getConnection();
            String query;
            PreparedStatement statement;
            
            query = "SELECT * FROM product";
            statement = connection.prepareStatement(query);
            GuiUtils.resultSetToTableModel(statement.executeQuery(), productsTable);
            
            rowSorter = new TableRowSorter<TableModel>(productsTable.getModel());
            productsTable.setRowSorter(rowSorter);

            List<RowSorter.SortKey> sortKeys = new ArrayList<>();
            sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
//            sortKeys.add(new RowSorter.SortKey(3, SortOrder.ASCENDING));

            rowSorter.setSortKeys(sortKeys);
            
            query = "SELECT type FROM product GROUP BY type";
            statement = connection.prepareStatement(query);
            ResultSet rs = statement.executeQuery();
            DefaultComboBoxModel<String> cbModel = new DefaultComboBoxModel<>();
            
            cbModel.addElement("Все");
            
            while (rs.next()) {
                cbModel.addElement(rs.getString(1));
            }
            
            filterTypeComboBox.setModel(cbModel);
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SellerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        filterTypeComboBox = new javax.swing.JComboBox<>();
        applyFilterButton = new javax.swing.JButton();
        addToChartButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        searchForTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chartTable = new javax.swing.JTable();
        deleteFromChartButton = new javax.swing.JButton();
        customerNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        forPaymentTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        acceptedTextField = new javax.swing.JTextField();
        acceptedLabel = new javax.swing.JLabel();
        changeTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        payButton = new javax.swing.JButton();
        responseLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        diagramPanel = new javax.swing.JPanel();
        diagramComboBox = new javax.swing.JComboBox<>();
        printSales = new javax.swing.JButton();
        printDiagramButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(17, 96, 98));

        jScrollPane1.setViewportView(productsTable);

        applyFilterButton.setText("Применить");
        applyFilterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyFilterButtonActionPerformed(evt);
            }
        });

        addToChartButton.setBackground(new java.awt.Color(0, 102, 0));
        addToChartButton.setForeground(new java.awt.Color(255, 255, 255));
        addToChartButton.setText("Добавить в корзину");
        addToChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToChartButtonActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Фильтр:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Поиск по ключевым словам:");

        searchForTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchForTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyFilterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchForTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addToChartButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(filterTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyFilterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(searchForTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addToChartButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Выбор продукта", jPanel1);

        jPanel2.setBackground(new java.awt.Color(17, 96, 98));

        chartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "model", "maker", "type", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(chartTable);

        deleteFromChartButton.setText("Удалить из корзины");
        deleteFromChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFromChartButtonActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ФИО клиента:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Оплата");

        forPaymentTextField.setEditable(false);
        forPaymentTextField.setText("0");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Итого к оплате:");

        acceptedTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                acceptedTextFieldFocusLost(evt);
            }
        });
        acceptedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptedTextFieldActionPerformed(evt);
            }
        });

        acceptedLabel.setForeground(new java.awt.Color(255, 255, 255));
        acceptedLabel.setText("Принято:");

        changeTextField.setEditable(false);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Сдача:");

        payButton.setText("Оплатить");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        responseLabel.setForeground(new java.awt.Color(102, 0, 0));
        responseLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(deleteFromChartButton, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                                .addComponent(forPaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerNameTextField))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(acceptedLabel)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(changeTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(acceptedTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(responseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(payButton))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(forPaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acceptedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acceptedLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteFromChartButton)
                    .addComponent(responseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Корзина", jPanel2);

        jPanel3.setBackground(new java.awt.Color(17, 96, 98));

        javax.swing.GroupLayout diagramPanelLayout = new javax.swing.GroupLayout(diagramPanel);
        diagramPanel.setLayout(diagramPanelLayout);
        diagramPanelLayout.setHorizontalGroup(
            diagramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        diagramPanelLayout.setVerticalGroup(
            diagramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 321, Short.MAX_VALUE)
        );

        diagramComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Диск", "Гистограмма" }));

        printSales.setText("Распечатать продажи");
        printSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printSalesActionPerformed(evt);
            }
        });

        printDiagramButton.setText("Вывести");
        printDiagramButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printDiagramButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diagramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(diagramComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(printDiagramButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE)
                        .addComponent(printSales)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(diagramComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printDiagramButton)
                    .addComponent(printSales))
                .addGap(18, 18, 18)
                .addComponent(diagramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Отчёт по продажам", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyFilterButtonActionPerformed
        // TODO add your handling code here:
        String filter = (String) filterTypeComboBox.getSelectedItem();
        
        if ("Все".equals(filter)) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + filter));
        }
    }//GEN-LAST:event_applyFilterButtonActionPerformed

    private void addToChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToChartButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel productsTableModel = (DefaultTableModel) productsTable.getModel();
        int row = productsTable.getSelectedRow();
        
        String model = (String) productsTableModel.getValueAt(row, 0);
        String maker = (String) productsTableModel.getValueAt(row, 1);
        String type = (String) productsTableModel.getValueAt(row, 2);
        int price = (Integer) productsTableModel.getValueAt(row, 3);
        
        int total = Integer.parseInt(forPaymentTextField.getText());
        forPaymentTextField.setText(Integer.toString(total + price));
        
        DefaultTableModel chartTableModel = (DefaultTableModel) chartTable.getModel();  
        chartTableModel.addRow(new Object[] {model, maker, type, price});
    }//GEN-LAST:event_addToChartButtonActionPerformed

    private void searchForTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchForTextFieldActionPerformed
        // TODO add your handling code here:
        String text = searchForTextField.getText();
        
        if (text.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }
    }//GEN-LAST:event_searchForTextFieldActionPerformed

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        // TODO add your handling code here:
        int rowCount = chartTable.getRowCount();
        DefaultTableModel tableModel = (DefaultTableModel) chartTable.getModel();
        
        try {
            for (int i = 0; i < rowCount; i++) {
                String model = (String) tableModel.getValueAt(i, 0);
                int id = DbUtils.insertCustomerAndGetId(customerNameTextField.getText(), connection);
                DbUtils.insertSale(model, id, connection);
            }
        } catch(SQLException ex) {
            Logger.getLogger(SellerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void acceptedTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_acceptedTextFieldFocusLost
        // TODO add your handling code here:
        checkAcceptedAndCalculateChange();
    }//GEN-LAST:event_acceptedTextFieldFocusLost

    private void acceptedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptedTextFieldActionPerformed
        // TODO add your handling code here:
        checkAcceptedAndCalculateChange();
    }//GEN-LAST:event_acceptedTextFieldActionPerformed

    private void printSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printSalesActionPerformed
        // TODO add your handling code here:
        try {
            JasperDesign jasperDesign =
                    JRXmlLoader.load("C:\\Users\\Lenovo\\Documents\\ComputerStoreApplication\\src\\resources\\sales_report.jrxml");
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, connection);
            JasperViewer.viewReport(jasperPrint, false);
        } catch (JRException ex) {
            Logger.getLogger(SellerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printSalesActionPerformed

    private void printDiagramButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printDiagramButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = diagramComboBox.getSelectedIndex();
        
        String query = "SELECT [type], COUNT(*) as sold\n" +
                "FROM sales JOIN product ON sales.product_model = product.model\n" +
                "GROUP BY [type];";
        
        ResultSet rs = null;
        try {
            PreparedStatement statement = connection.prepareStatement(query);
            rs = statement.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(SellerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        switch (selectedIndex) {
            case 0:
                drawPie(rs);
                break;
            case 1:
                drawHistogram(rs);
                break;
                
        }
    }//GEN-LAST:event_printDiagramButtonActionPerformed

    private void deleteFromChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFromChartButtonActionPerformed
        // TODO add your handling code here:
        int row = chartTable.getSelectedRow();
        DefaultTableModel tableModel = (DefaultTableModel) chartTable.getModel();
        
        int total = Integer.parseInt(forPaymentTextField.getText());
        int price = (Integer) tableModel.getValueAt(row, 3);
        forPaymentTextField.setText(Integer.toString(total - price));
        
        tableModel.removeRow(row);
    }//GEN-LAST:event_deleteFromChartButtonActionPerformed

    private void drawPie(ResultSet rs) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        
        try {
            while (rs.next()) {
                dataset.setValue(rs.getString(1), rs.getInt(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(SellerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JFreeChart chart = ChartFactory.createPieChart3D(      
                "Продажи",   // chart title 
                dataset,          // data    
                true,             // include legend   
                true,
                false);

      ChartPanel chartPanel = new ChartPanel(chart);
      diagramPanel.removeAll();
      diagramPanel.add(chartPanel,BorderLayout.CENTER);
      diagramPanel.updateUI();
    }
    
    private void drawHistogram(ResultSet rs) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        try {
            while (rs.next()) {
                dataset.setValue(rs.getInt(2), rs.getString(1), rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(SellerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
//        dataset.setValue(30.1, "Parameters", "Param1");
//        dataset.setValue(50, "Parameters", "Param2");
//        dataset.setValue(20.5, "Parameters", "Param3");
        
        JFreeChart chart = ChartFactory.createBarChart3D(
                "Продажи по категориям", 
                "Категории", 
                "Количество продаж", 
                dataset, 
                PlotOrientation.VERTICAL,
                true, true, false);
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        ChartPanel chartPanel = new ChartPanel(chart);

        diagramPanel.removeAll();
        diagramPanel.add(chartPanel,BorderLayout.CENTER);
        //panel.add(chartPanel);
        diagramPanel.updateUI();
    }
    
    private void checkAcceptedAndCalculateChange() {
        int accepted = Integer.parseInt(acceptedTextField.getText());
        int toPay = Integer.parseInt(forPaymentTextField.getText());
        
        if (accepted < toPay) {
            responseLabel.setText("Недоплата");
        } else {
            responseLabel.setText(null);
            int change = accepted - toPay;
            changeTextField.setText(Integer.toString(change));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acceptedLabel;
    private javax.swing.JTextField acceptedTextField;
    private javax.swing.JButton addToChartButton;
    private javax.swing.JButton applyFilterButton;
    private javax.swing.JTextField changeTextField;
    private javax.swing.JTable chartTable;
    private javax.swing.JTextField customerNameTextField;
    private javax.swing.JButton deleteFromChartButton;
    private javax.swing.JComboBox<String> diagramComboBox;
    private javax.swing.JPanel diagramPanel;
    private javax.swing.JComboBox<String> filterTypeComboBox;
    private javax.swing.JTextField forPaymentTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton payButton;
    private javax.swing.JButton printDiagramButton;
    private javax.swing.JButton printSales;
    private javax.swing.JTable productsTable;
    private javax.swing.JLabel responseLabel;
    private javax.swing.JTextField searchForTextField;
    // End of variables declaration//GEN-END:variables
}
